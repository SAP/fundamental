{% extends "layout.njk" %}
{% from "./../format.njk" import format %}
{% from "../button/component.njk" import button %}
{% from "./component.njk" import action_bar %}
{% from "../dropdown/component.njk" import menu %}
{% import "./../utils.njk" as utils %}

<!-- include add'tl css from src/styles/, e.g., ['helpers','components/button'] -->
{% set css_deps = ['fonts','icons','components/contextual-menu','components/dropdown','components/button'] %}

{% block content %}
<style media="screen">
    .fd-action-bar {
        margin-bottom: 20px;
    }
</style>

<h1>action-bar</h1>

{%- set primarybtn %}{{
    button(
            { label: 'Save' },
            modifier={block: [ 'main', 'l'] }
        )
}}{%- endset %}

{%- set secbtn %}{{
  button(
          { label: 'Copy' },
          modifier={ block: ['secondary', 'l'] }
      )
}}{%- endset %}
{%- set contextmenu %}
{% set _id = utils.id() %}
<div class="fd-dropdown">
    {{  button(
        { icon: 'vertical-grip' },
        modifier={ block: ['secondary', 'l'] },
        aria={ controls: _id, haspopup: true, expanded: false, label: "More" }
    ) | indent(4)
}}
    {{  menu(properties={
        id: _id,
        items: [
            { "label": "Edit" },
            { "label": "Delete" },
            { "label": "Assign" },
            { "label": "Expire" },
            { "label": "Archive" }
        ]
    },
    classes="contextual-menu") | indent(4)
}}
</div>
{%- endset %}


    <!-- output the component example and the code snippet -->
    {% set example %}

    {{  action_bar(
            properties={
                title: data.properties.title,
                actions: {
                    properties: {
                        items: [secbtn,primarybtn]
                    }
                }
            },
            modifier={
                block: []
            },
            state={},
            aria={}
        )
    }}

    {{  action_bar(
            properties={
                title: data.properties.title,
                actions: {
                    properties: {
                        items: [contextmenu]
                    }
                }
            },
            modifier={
                block: []
            },
            state={},
            aria={}
        )
    }}

    {% endset %}
    {{ format(example) }}
<br><br>

<h2>Actions Hidden</h2>
<div id="toggles">

<button type="button" id="button">Simulate dirty state</button>
<br>

    <!-- output the component example and the code snippet -->
    {% set example %}
    {{  action_bar(
            properties={
                navigation: backbtn,
                title: data.properties.title,
                actions: {
                    properties: {
                        items: [secbtn,primarybtn]
                    },
                    aria: {
                        hidden: true
                    }
                }
            },
            modifier={
                block: []
            },
            state={},
            aria={}
        )
    }}

    {% endset %}
    {{ format(example) }}
</div>
    <script type="text/javascript">
        var button = document.getElementById("button");
        var toggles = document.getElementById("toggles");
        var actions = toggles.querySelectorAll(".fd-action-bar__actions");
        function doDirty() {
            for (var i = 0; i < actions.length; i++) {
                var item = actions[i];
                if(item.hasAttribute('aria-hidden')) {
                    item.setAttribute('aria-hidden',false);
                } else {
                    var classes = item.getAttribute("class");
                    classes.replace('is-disabled','');
                    item.setAttribute("class",classes.replace('is-disabled',''));
                }
            }
        }
        button.addEventListener('click',function() {
            doDirty();
        })
    </script>

{% endblock %}
