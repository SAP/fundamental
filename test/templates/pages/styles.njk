{% extends "./layouts/ui.njk" %}
{% block ui_app %}


{% set breakpoints = {
  "s": [320,"320-599"],
  "m": [600,"600-1023"],
  "l": [1024,"1024-1439"],
  "xl": [1440,"1440-1919"],
  "xxl": [1920,">1920"]
} %}
<style>
.fd-ui__header::before {
  content: "default: <320px";
  font-size: 2em;
  background-color: white;
}
{% for size,width in breakpoints %}

@media screen and (min-width: {{width[0]}}px) {
  .fd-ui__header::before {
    content: "{{size}}: {{width[1]}}px";
  }
}
{% endfor %}

.fd-container{ flex:1; margin:40px;}
</style>

{% set colors = {

  "action": [
    "hsl(210, 91%, 43%) / #0A6ED1 UI Brand/ Highlight",
    "hsl(210, 0%, 100%) #FFFFFF inverse action",
    "hsl(210, 90%, 33%) // 0854A1 UI Icon/ Down/ Selected"
  ],

  "text": [
    "hsl(210, 7.5%, 21%), // #32363A UI Text 1",
    "hsl(210, 5%, 33.5%), // #515559 UI Text 2",
    "hsl(210, 3%, 42.7%), // #6a6d70 UI Text 3",
    "hsl(210, 2.5%, 46.5%), //#74777A UI Text 4",
    "hsl(210, 0%, 100%) / #ffffff inverse text"
  ],

  "background": [
    "hsl(210, 9%, 93.7%), // #EDEFF0 UI Shell/ App background",
    "hsl(210, 0%, 100%),  // #FFFFFF UI content background",
    "hsl(145, 75%, 96.7%),  // #F1FDF6 Semantic Colors positive background",
    "hsl(28, 86.7%, 97.1%), // #FEF7F1 Semantic Colors alert background",
    "hsl(0, 100%, 96.1%),  // #FFEBEB Semantic Colors negative background",
    "hsl(0, 100%, 94.7%), // #FFE4E4 Semantic Colors Neutral background"
  ],

  "neutral": [
    "hsl(210, 3%, 98%), // #FAFAFA UI Neutral UI 1",
    "hsl(210, 3%, 93.5%), // #EEEEEF UI Neutral UI 2",
    "hsl(0, 0%, 85%), // #D9D9D9 UI Neutral UI 3",
    "hsl(212, 8%, 57%) // #89919A UI Neutral UI 4"
  ],

  "status": [
    "hsl(147, 85.3%, 26.7%), // #107F3E Semantic Colors positive",
    "hsl(28, 90.2%, 48%), // #E9730C Semantic Colors alert",
    "hsl(0, 100%, 36.7%), // #BB0000 Semantic Colors negative",
    "hsl(210, 2.8%, 42.7%), // #6A6d70 Semantic Colors neutral text",
    "hsl(210, 90.9%, 42.9%), // #6A6D70 Semantic Colors neutral border"
  ],

  "accent": [
    "hsl(34, 82%, 49%), // #E38B16 accent 1" ,
    "hsl(0, 80%, 67%), // #DC7474 accent 2",
    "hsl(332, 75%, 49%), // #DB1F77 accent 3",
    "hsl(315, 54%, 49%), // #C0399F accent 4",
    "hsl(238, 65%, 63%), // #6367DE accent 5",
    "hsl(210, 64%, 60%), // #5899DA accent 6",
    "hsl(186, 81%, 39%), // #13A4B4 accent 7",
    "hsl(75, 86%, 34%), // #7CA10C accent 8",
    "hsl(269, 54%, 58%), // #925ACE accent 9",
    "hsl(205, 15%, 58%), // #8497a4 accent 10",
    "hsl(34, 82%, 45%), // #D17F15 accessible accent 1 B (3:1)",
    "hsl(0, 60%, 54%), // #D04343 accessible accent 2 B (4.6:1)",
    "hsl(210, 64.2%, 47.1%), // #2B78C5 accessible accent 6 B (4.6:1)",
    "hsl(238, 65.1%, 62.9%), // #0F828F accessible accent 7 B (4.6:1)",
    "hsl(274.2, 60%, 55.9%), // #647887 accessible accent 10 B (4.6:1)"
    ],

    "shell": [
      "hsl(210, 28%, 29%), // #354A5F shell background",
      "hsl(210, 100%, 91%) // #D1E8FF shell icons"
    ]

} %}

{% set states = {
  "action": [
    ["hover", "hsla(210, 91%, 36%, 1) / #085caf"],
    ["selected", "hsla(210, 98%, 33%, 1) / #0254a7"],
    ["disabled", "hsla(210, 91%, 43%, 0.4) / n/a"]
  ],
  "background": [
    ["hover", "hsla(210, 3%, 98%, 1) / #fafafa"],
    ["selected", "hsla(210, 91%, 43%, 0.07) / n/a"],
    ["selected-hover", "hsla(210, 91%, 43%, 0.1) / n/a"]
  ]
} %}

<div class="fd-container">

    <h1>Color</h1>
{% for group, values in colors %}
  <h2>{{ group }}</h2>

  {% for item in values %}
  {% if group == "accent" %}
    <h3>
      {% if loop.first%}
        3:1
      {% endif %}
{% if loop.index == 12 %}
  4.6:1
{% endif %}
    </h3>
  {% endif %}
    <span>{{ loop.index }} - {{ item }}</span>

<br>    <div style="padding: 20px; border: 1px solid #ccc; background-color: var(--fd-color-{{ group }}-{{ loop.index }})">
    </div>
<br>
  {% endfor %}

{% endfor %}


{% for group, values in states %}
  <h1>State Colors</h1>
  <h2>{{ group }}</h2>
  {% for item in values %}
    {% set cssvar %}
    --fd-color-{{ group }}-{{ item[0] }}
    {% endset %}

    <span>{{ item[0] }} — {{ item[1] }} / var({{cssvar}})</span>

    <br> <div style="padding: 20px; border: 1px solid #ccc; background-color: var({{cssvar}})">
        </div>
    <br>
  {% endfor %}

{% endfor %}


{#
<h2>Mixins</h2>
<h3><code>@mixin fd-color($group, $shade)</code></h3>
 #}

</div>

{% set spaces = {
  "base": [4, ""],
  "xxs": [8, "tiny"],
  "xs": [12, ""],
  "s": [16, "small"],
  "reg": [24, ""],
  "m": [32, "medium"],
  "l": [46, ""],
  "xl": [40, ""],
  "xxl": [48, "large"]
} %}


<div class="fd-container">

    <h1>Spacing</h1>
{% for key, value in spaces %}


      <h2 style="margin-bottom:0;">
<span class="fd-has-type-1">{{ key }} — {{value[0]}}px</span>
  {{value[1]}}
        </h2>
    {% set color = "accent-3" if value[1] else "neutral-3" %}

    <div class="fd-has-height-{{ key }} fd-has-background-color-{{color}}">
    </div>
    <br>
    {# <p>{{ value }}px</p> #}
{% endfor %}
{#
<h2>Mixins</h2>
<h3><code>@mixin fd-space($size)</code></h3>
 #}

</div>




{% set specs = {
    "-1": [ 12, 16 ],
    "0": [ 14, 20 ],
    "1": [ 16, 20 ],
    "2": [ 18, 24 ],
    "3": [ 20, 28 ],
    "4": [ 24, 32 ],
    "5": [ 36, 40 ],
    "6": [ 48, 52 ]
} %}



<div class="fd-container">

    <h1>Type Sizes</h1>


    {% for i in ["-1","0","1","2","3","4","5","6"] | reverse %}
    {% set type = specs[i] %}
        <h2 style="margin-bottom:0;">{{i}}</h2>
<p>
  <code>
font-size: {{ (type[1]/16) | round(5) }}rem //{{ type[0] }}px, <br>
line-height:
  {{ (type[1]/type[0]) | round(5) }} //{{ type[1] }}px
  </code>
         </p>
        <p class="fd-has-type{{ '-minus' if i < 0 }}-{{ i | abs if i != 0 else 'base' }}">
          {% if i == "5" %}
            {# <s> #}
          {% endif %}Grumpy wizards make toxic brew for the evil Queen and Jack wizards make toxic brew for the evil Queen and Jack
          {% if i == "5" %}
        {# </s> #}
          {% endif %}
        </p>
        <br>

    {% endfor %}

<p>
  <strong>body</strong><br>
  {{specs["0"][0]}}px/{{specs["1"][1]}}
</p>
        <p>
    Nullam ut tincidunt nunc. Pellentesque metus lacus commodo eget justo ut rutrum varius nunc. Sed non rhoncus risus. Morbi sodales gravida pulvinar. Duis malesuada odio volutpat elementum vulputate massa magna scelerisque ante et accumsan tellus nunc in sem. Donec mattis arcu et velit aliquet non sagittis justo vestibulum. Suspendisse volutpat felis lectus nec consequat ipsum mattis id.
    </p><p>
    Donec dapibus vehicula facilisis. In tincidunt mi nisi nec faucibus tortor euismod nec. Suspendisse ante ligula aliquet vitae libero eu vulputate dapibus libero. Sed bibendum sapien at posuere interdum libero est sollicitudin magna ac gravida tellus purus eu ipsum. Proin ut quam arcu.

        </p>


{#
    <h2>Mixins</h2>
    <h3><code>@mixin fd-type($size, $weight)</code></h3>
    <p>Each type size has default family, weight and transform rules built in. Passing the size alone will return all default rules.</p>
    <p>Example:<br>
    <pre>
    .foo {
        @include fd-type("4");
    }
    </pre>
    </p>
    <p>
    Additional arguments can be passed to the mixin.
    </p>
    <p>Example:<br>
    <pre>
    .small-header {
        @include fd-type("-1");
    }
    </pre>
    <table>
        <tr>
            <td colspan="2">
                Acceptable arguments
            </td>
        </tr>
        <tr>
            <td>$size</td>
            <td>-1,0 (default),1,2,3,4,5,6</td>
        </tr>
        <tr>
            <td>$weight</td>
            <td>normal, med, semi</td>
        </tr>
    </table>



    <h3><code>@mixin fd-weight($weight)</code></h3>
    <p>
    Mofify the font-weight independently.
    </p>
    <table>
        <tr>
            <td colspan="2">
                Acceptable arguments
            </td>
        </tr>
        <tr>
            <td>$weight</td>
            <td>light, reg (default), med, semi, bold</td>
        </tr>
    </table>


    <h2>Helpers</h2>
    <p>These classes are also available to apply all default rules. Use sparingly.</p>


    <h3>Sizes</h3>

    {% for i in [-3,-2,-1,0,1,2,3,4,5] | reverse %}
    <p>
          <code>.fd-has-type{{ '-minus' if i < 0 }}-{{ i | abs }}{% if i == 0 %}, .fd-has-type-base{% endif %}</code>
        <br>
    </p>
    {% endfor %} #}



</div>

<div class="fd-container">
  <h1>Fonts</h1>

  {% for i in ['header', 'body', 'code'] %}
      <span>
           <code>.fd-has-font-family-{{ i }}</code>
      </span>
      <p class="fd-has-type-3 fd-has-font-family-{{ i }}">Grumpy wizards make toxic brew for the evil Queen and Jack</p>
      <br>
  {% endfor %}

  <h2 class="fd-has-font-family-body">72</h2>
  <p class="fd-has-font-family-body">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
  a b c d e f g h i j k l m n o p q r s t u v w x y z
  1 2 3 4 5 6 7 8 9 0
  ​‘ ? ’ “ ! ” ( % ) [ # ] { @ } / & \ < - + ÷ × = > ® © $ € £ ¥ ¢ : ; , . *</p>
</div>

{% endblock %}
