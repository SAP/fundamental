/*!
* Fundamental-UI-Theme-Ariba v1.1.0
* Copyright (c) 2018 SAP SE or an SAP affiliate company.
* Licensed under Apache License 2.0 (https://github.com/SAP/Fundamental/blob/master/LICENSE)
*/
input[type=text], input[type=password], input[type=email], input[type=url], input[type=search], input[type=tel], input[type=number], input[type=date] {
  direction: inherit;
  line-height: 1.14286rem;
  border-color: #ACD4ED; }
  input[type=text]:active, input[type=text]:focus, input[type=text]:hover, input[type=password]:active, input[type=password]:focus, input[type=password]:hover, input[type=email]:active, input[type=email]:focus, input[type=email]:hover, input[type=url]:active, input[type=url]:focus, input[type=url]:hover, input[type=search]:active, input[type=search]:focus, input[type=search]:hover, input[type=tel]:active, input[type=tel]:focus, input[type=tel]:hover, input[type=number]:active, input[type=number]:focus, input[type=number]:hover, input[type=date]:active, input[type=date]:focus, input[type=date]:hover {
    border-color: #0a6ed1; }
  input[type=text][disabled], input[type=text][aria-disabled="true"], input[type=text].is-disabled, input[type=password][disabled], input[type=password][aria-disabled="true"], input[type=password].is-disabled, input[type=email][disabled], input[type=email][aria-disabled="true"], input[type=email].is-disabled, input[type=url][disabled], input[type=url][aria-disabled="true"], input[type=url].is-disabled, input[type=search][disabled], input[type=search][aria-disabled="true"], input[type=search].is-disabled, input[type=tel][disabled], input[type=tel][aria-disabled="true"], input[type=tel].is-disabled, input[type=number][disabled], input[type=number][aria-disabled="true"], input[type=number].is-disabled, input[type=date][disabled], input[type=date][aria-disabled="true"], input[type=date].is-disabled {
    border-color: transparent;
    background-color: #F7F7F8; }
  input[type=text].--l, input[type=password].--l, input[type=email].--l, input[type=url].--l, input[type=search].--l, input[type=tel].--l, input[type=number].--l, input[type=date].--l {
    height: 44px;
    font-size: 16px;
    line-height: 1.28571rem; }

input[type=radio], input[type=checkbox] {
  height: 20px;
  width: 20px;
  border-color: #ACD4ED; }
  input[type=radio]:checked, input[type=checkbox]:checked {
    border-color: #0a6ed1;
    background-color: #0a6ed1; }
  input[type=radio][disabled], input[type=radio][aria-disabled="true"], input[type=radio].is-disabled, input[type=checkbox][disabled], input[type=checkbox][aria-disabled="true"], input[type=checkbox].is-disabled {
    border-color: #939598;
    background-color: #F7F7F8; }
  input[type=radio].--s, input[type=checkbox].--s {
    min-width: 18px;
    height: 18px;
    width: 18px; }
  input[type=radio].--l, input[type=checkbox].--l {
    height: 24px;
    width: 24px; }

input[type="checkbox"][disabled]::before, input[type="checkbox"][aria-disabled="true"]::before, input[type="checkbox"].is-disabled::before {
  border-color: #939598; }

input[type="radio"]:checked {
  background-color: #ffffff;
  border-color: #ACD4ED; }
  input[type="radio"]:checked::after {
    background-color: #0a6ed1; }
  input[type="radio"]:checked[disabled]::after, input[type="radio"]:checked[aria-disabled="true"]::after, input[type="radio"]:checked.is-disabled::after {
    background-color: #939598; }

input[type="radio"]:active, input[type="radio"]:focus {
  border-color: #0a6ed1; }

input[type="radio"].--s::after {
  width: 6px;
  height: 6px;
  top: calc(50% - (6px/2));
  left: calc(50% - (6px/2)); }

input[type="radio"].--l::after {
  width: 12px;
  height: 12px;
  top: calc(50% - (12px/2));
  left: calc(50% - (12px/2)); }

/*!
.fd-button+( (--small | --large), --icon, --text, --link, --action-bar)+( (.is-disabled | [aria-disabled=true]) | (.is-selected | [aria-selected=true] | (.is-pressed | [aria-pressed=true]))
*/
.fd-button, [class*="fd-button--"] {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  border-radius: 3px;
  padding-left: 24px;
  padding-right: 24px; }
  .fd-button[class*="ariba-icon"]::before, [class*="fd-button--"][class*="ariba-icon"]::before {
    margin-top: -6px; }
  .fd-button.fd-button--round, [class*="fd-button--"].fd-button--round {
    font-size: 1.14286rem;
    line-height: 1.25;
    font-weight: 400;
    border-radius: 50%;
    padding: 0px !important;
    height: 48px;
    max-height: 48px;
    min-width: 48px; }
  .fd-button.--icon-only, [class*="fd-button--"].--icon-only {
    padding-left: 11px;
    padding-right: 11px; }

.fd-button--main, .fd-button--action-bar {
  font-weight: 700; }

.rtl .fd-button::before, .rtl [class*="fd-button--"]::before {
  margin-left: 8px;
  margin-right: 0px; }

[dir='rtl'] .fd-button::before,
[dir='rtl'] [class*="fd-button--"]::before {
  margin-left: 8px;
  margin-right: 0px; }

[dir='rtl'] .fd-button.--icon-only::before,
[dir='rtl'] [class*="fd-button--"].--icon-only::before,
[dir='rtl'] .fd-button--round::before {
  margin-left: 0px; }

.fd-button--negative {
  border-color: #CC0000; }
  .fd-button--negative:active, .fd-button--negative.is-active, .fd-button--negative[aria-selected="true"], .fd-button--negative.is-selected, .fd-button--negative[aria-pressed="true"], .fd-button--negative.is-pressed {
    background-color: #990000;
    border-color: #990000; }

.fd-button--compact {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 32px;
  max-height: 32px;
  min-width: 32px;
  padding-left: 20px;
  padding-right: 20px;
  border-radius: 3px; }
  .fd-button--compact::before {
    font-size: 1.14286rem;
    line-height: 1; }
  .fd-button--compact::after {
    font-size: 1.14286rem;
    line-height: 1; }

.fd-button--compact.--icon-only {
  padding-left: 9px;
  padding-right: 9px; }

.fd-button--xs {
  font-size: 0.85714rem;
  line-height: 1.33333;
  font-weight: 400;
  height: 24px;
  max-height: 24px;
  min-width: 24px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 2px; }
  .fd-button--xs::before {
    font-size: 0.85714rem;
    line-height: 1; }
  .fd-button--xs::after {
    font-size: 0.85714rem;
    line-height: 1; }

.fd-button--xs.fd-button--round {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 36px;
  max-height: 36px;
  min-width: 36px; }

.fd-button--xs.--icon-only {
  padding-left: 6px;
  padding-right: 6px; }

.fd-button--s {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 28px;
  max-height: 28px;
  min-width: 28px;
  padding-left: 16px;
  padding-right: 16px;
  border-radius: 2px; }
  .fd-button--s::before {
    font-size: 1.14286rem;
    line-height: 1; }
  .fd-button--s::after {
    font-size: 1.14286rem;
    line-height: 1; }

.fd-button--s.fd-button--round {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 44px;
  max-height: 44px;
  min-width: 44px; }

.fd-button--s.--icon-only {
  padding-left: 7px;
  padding-right: 7px; }

.fd-button--l {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 40px;
  max-height: 40px;
  min-width: 40px;
  padding-left: 28px;
  padding-right: 28px;
  border-radius: 3px; }
  .fd-button--l::before {
    font-size: 1.42857rem;
    line-height: 1; }
  .fd-button--l::after {
    font-size: 1.42857rem;
    line-height: 1; }

.fd-button--l.fd-button--round {
  font-size: 1.28571rem;
  line-height: 1.33333;
  font-weight: 400;
  height: 52px;
  max-height: 52px;
  min-width: 52px; }

.fd-button--l.--icon-only {
  padding-left: 12px;
  padding-right: 12px; }

.fd-button--xl {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 44px;
  max-height: 44px;
  min-width: 44px;
  padding-left: 32px;
  padding-right: 32px;
  border-radius: 3px; }
  .fd-button--xl::before {
    font-size: 1.71429rem;
    line-height: 1; }
  .fd-button--xl::after {
    font-size: 1.71429rem;
    line-height: 1; }

.fd-button--xl.fd-button--round {
  font-size: 1.42857rem;
  line-height: 1.3;
  font-weight: 400;
  height: 56px;
  max-height: 56px;
  min-width: 56px; }

.fd-button--xl.--icon-only {
  padding-left: 14px;
  padding-right: 14px; }

/*!
.fd-form
    .fd-form__set?
        .fd-form__legend(.is-required)
        .fd-form__group?
            .fd-form__item+(--check, --inline)
                .fd-form__label(.is-required)
                .fd-form__control
            .fd-form__message(--help, --error, --warning)

*/
.fd-form__set .fd-form__message {
  margin-top: 0; }

[dir='rtl'] .fd-form__control {
  margin-left: 8px;
  margin-right: 0; }

.fd-form__item.--warning {
  color: #f59518; }
  .fd-form__item.--warning .fd-form__control {
    border-color: #f59518; }

.fd-form__item.--success {
  color: #359c46; }
  .fd-form__item.--success .fd-form__control {
    border-color: #359c46; }

.fd-form__message {
  color: inherit;
  padding: 1px 0;
  font-size: 12px;
  height: 12px; }

/*!
.fd-input-group+(--inline)
    .fd-input-group__addon+()
        .fd-input-group__button
*/
.fd-input-group.--l {
  font-size: 16px; }

.fd-input-group__addon {
  border: 0px;
  padding: 0px;
  background-color: transparent;
  margin: 0px 0px 0px -40px;
  color: #939598;
  text-align: center;
  text-align: -webkit-center; }
  .fd-input-group__addon--button {
    border: 1px solid #ACD4ED;
    margin: 0px 0px 0px -50px; }
  .fd-input-group__addon--before {
    margin: 0px -40px 0px 0px;
    padding-left: 5px;
    z-index: 1;
    min-width: 40px;
    text-align: center; }
  .fd-input-group__addon--after {
    min-width: 40px; }

.fd-input-group--before input[type=text], .fd-input-group--before input[type=password], .fd-input-group--before input[type=email], .fd-input-group--before input[type=url], .fd-input-group--before input[type=search], .fd-input-group--before input[type=tel], .fd-input-group--before input[type=number], .fd-input-group--before input[type=date] {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  padding-left: 45px; }

.fd-input-group--after input[type=text], .fd-input-group--after input[type=password], .fd-input-group--after input[type=email], .fd-input-group--after input[type=url], .fd-input-group--after input[type=search], .fd-input-group--after input[type=tel], .fd-input-group--after input[type=number], .fd-input-group--after input[type=date] {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  padding-right: 45px; }

.fd-input-group--before.--after input[type=text], .fd-input-group--before.--after input[type=password], .fd-input-group--before.--after input[type=email], .fd-input-group--before.--after input[type=url], .fd-input-group--before.--after input[type=search], .fd-input-group--before.--after input[type=tel], .fd-input-group--before.--after input[type=number], .fd-input-group--before.--after input[type=date] {
  padding-left: 45px;
  padding-right: 45px; }

[dir='rtl'] .fd-input-group__addon {
  margin: 0px -40px 0px 0px; }
  [dir='rtl'] .fd-input-group__addon--before {
    margin: 0px 0px 0px -40px;
    padding-left: 1px;
    padding-right: 8px; }

[dir='rtl'] .fd-input-group--before .fd-form__control {
  padding-right: 45px;
  padding-left: 12px; }

[dir='rtl'] .fd-input-group--after .fd-form__control {
  padding-left: 45px;
  padding-right: 12px; }

[dir='rtl'] .fd-input-group--before.--after .fd-form__control {
  padding-left: 45px;
  padding-right: 45px; }

.fd-toggle {
  height: 25.6px; }
  .fd-toggle__switch {
    -webkit-box-shadow: none;
            box-shadow: none; }
  .fd-toggle input {
    top: 5.11719px;
    width: 100%;
    height: 71%; }
    .fd-toggle input:checked {
      background-color: #ACD4ED; }
      .fd-toggle input:checked + .fd-toggle__switch {
        background: #0a6ed1;
        border-color: #0a6ed1; }
  [dir='rtl'] input:checked + .fd-toggle__switch {
    right: calc(100% - 25.6px); }
  .fd-toggle--xxs {
    height: 14px;
    width: 26px; }
    .fd-toggle--xxs .fd-toggle__switch {
      height: 16px;
      width: 16px; }
    .fd-toggle--xxs input {
      top: 3px;
      border-radius: 8px; }
      .fd-toggle--xxs input:checked + .fd-toggle__switch {
        left: calc(100% - 16px); }
  .fd-toggle--xs {
    height: 12.2px;
    width: 34px; }
    .fd-toggle--xs input {
      top: 4.57031px; }
  .fd-toggle--s {
    height: 17.8px;
    width: 40px; }
    .fd-toggle--s input {
      top: 4.78125px; }
  .fd-toggle--l {
    height: 30px;
    width: 54px; }
    .fd-toggle--l input {
      top: 5.11719px; }
      .fd-toggle--l input:checked:after {
        content: "On";
        display: block;
        padding: 3px 0px 0px 4px;
        color: #0a6ed1;
        font-size: 10px; }
      .fd-toggle--l input:after {
        content: "Off";
        display: block;
        padding: 3px 0px 0px 33px;
        color: gray;
        font-size: 10px; }

[dir='rtl'] .fd-toggle__switch {
  right: 0;
  -webkit-transition: right 0.125s ease-in;
  transition: right 0.125s ease-in; }

[dir='rtl'] .fd-toggle--xxs input:checked + .fd-toggle__switch {
  right: calc(100% - 16px); }

[dir='rtl'] .fd-toggle--xs input:checked + .fd-toggle__switch {
  right: calc(100% - 14.2px); }

[dir='rtl'] .fd-toggle--s input:checked + .fd-toggle__switch {
  right: calc(100% - 19.8px); }

[dir='rtl'] .fd-toggle--l input:checked + .fd-toggle__switch {
  right: calc(100% - 32px); }

/*!
.fd-spinner-2+(.is-hidden|[aria-hidden=true])

<div class="fd-spinner-2">
	<div></div>
</div>

/*!
 * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
 * Copyright 2015 Daniel Cardoso <@DanielCardoso>
 * Licensed under MIT
 */
.fd-spinner-2 {
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  font-size: 0;
  color: #0a6ed1;
  width: 48px;
  height: 48px;
  margin: 0 auto; }
  .fd-spinner-2.is-hidden, .fd-spinner-2[aria-hidden="true"] {
    display: none; }
  .fd-spinner-2 > div {
    position: relative;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: inline-block;
    float: none;
    border: 4px solid currentColor;
    width: 48px;
    height: 48px;
    background: transparent;
    border-bottom-color: transparent;
    border-radius: 100%;
    -webkit-animation: --rotate 1s linear infinite;
    animation: --rotate 1s linear infinite; }
  .fd-spinner-2.--light {
    color: #f5f5f5; }
  .fd-spinner-2.--s {
    width: 24px;
    height: 24px; }
    .fd-spinner-2.--s > div {
      width: 24px;
      height: 24px;
      border-width: 2px; }
  .fd-spinner-2.--l {
    width: 72px;
    height: 72px; }
    .fd-spinner-2.--l > div {
      width: 72px;
      height: 72px;
      border-width: 6px; }
  .ariba button .fd-spinner-2,
  button .fd-spinner-2 {
    color: inherit; }
  .is-busy .fd-spinner-2,
  [aria-busy="true"] .fd-spinner-2 {
    position: absolute;
    z-index: 2;
    left: calc(50% - 48px/2);
    top: calc(50% - 48px/2); }

/*
 * Animation
 */
@-webkit-keyframes --rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes --rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/*!
.fd-button-group+()
    .fd-button
*/
.fd-button-group {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex; }
  .fd-button-group.--split [class*="fd-button--"] {
    padding-left: 16px;
    padding-right: 16px;
    color: #ffffff;
    background-color: #0a6ed1;
    border-color: #0a6ed1;
    font-weight: 700;
    font-size: inherit; }
    .fd-button-group.--split [class*="fd-button--"]:hover {
      background-color: #085caf;
      border-color: #085caf;
      color: #ffffff;
      -webkit-box-shadow: none;
              box-shadow: none; }
    .fd-button-group.--split [class*="fd-button--"].--more {
      border-left: 1px solid #fff;
      padding-left: 12px;
      padding-right: 12px;
      border-top-right-radius: 3px;
      border-bottom-right-radius: 3px; }
      .fd-button-group.--split [class*="fd-button--"].--more::before {
        font-size: inherit;
        font-family: "Ariba-icons";
        font-style: normal;
        font-weight: 700;
        text-align: center;
        display: inline-block;
        text-decoration: inherit;
        text-transform: none;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        speak: none;
        content: "\eB16";
        margin-top: -5px; }
  .fd-button-group.--split .fd-popover__body {
    min-width: inherit;
    margin-top: 35px;
    margin-left: -1px;
    font-size: inherit; }
    .fd-button-group.--split .fd-popover__body .fd-menu {
      font-size: inherit; }
  .fd-button-group.--split.--compact {
    font-size: 1rem;
    line-height: 1.42857; }
    .fd-button-group.--split.--compact .fd-popover__body {
      margin-top: 31px; }
    .fd-button-group.--split.--compact [class*="fd-button--"] {
      height: 32px;
      max-height: 32px;
      padding-left: 12px;
      padding-right: 12px; }
    .fd-button-group.--split.--compact [class*="fd-button--"].--more {
      height: 32px;
      max-height: 32px;
      padding-left: 11px;
      padding-right: 11px; }
  .fd-button-group.--split.--xs {
    font-size: 0.85714rem;
    line-height: 1.33333; }
    .fd-button-group.--split.--xs .fd-popover__body {
      margin-top: 23px; }
    .fd-button-group.--split.--xs [class*="fd-button--"] {
      height: 24px;
      max-height: 24px;
      padding-left: 8px;
      padding-right: 8px; }
    .fd-button-group.--split.--xs [class*="fd-button--"].--more {
      height: 24px;
      max-height: 24px;
      padding-left: 7px;
      padding-right: 7px; }
  .fd-button-group.--split.--s {
    font-size: 1rem;
    line-height: 1.42857; }
    .fd-button-group.--split.--s .fd-popover__body {
      margin-top: 27px; }
    .fd-button-group.--split.--s [class*="fd-button--"] {
      height: 28px;
      max-height: 28px;
      padding-left: 8px;
      padding-right: 8px; }
    .fd-button-group.--split.--s [class*="fd-button--"].--more {
      height: 28px;
      max-height: 28px;
      padding-left: 8px;
      padding-right: 8px; }
  .fd-button-group.--split.--l {
    font-size: 1.14286rem;
    line-height: 1.25; }
    .fd-button-group.--split.--l .fd-popover__body {
      margin-top: 39px; }
    .fd-button-group.--split.--l [class*="fd-button--"] {
      height: 40px;
      max-height: 40px;
      padding-left: 20px;
      padding-right: 20px; }
    .fd-button-group.--split.--l [class*="fd-button--"].--more {
      height: 40px;
      max-height: 40px;
      padding-left: 13px;
      padding-right: 13px; }
  .fd-button-group.--split.--xl {
    font-size: 1.14286rem;
    line-height: 1.25; }
    .fd-button-group.--split.--xl .fd-popover__body {
      margin-top: 43px; }
    .fd-button-group.--split.--xl [class*="fd-button--"] {
      height: 44px;
      max-height: 44px;
      padding-left: 24px;
      padding-right: 24px; }
    .fd-button-group.--split.--xl [class*="fd-button--"].--more {
      height: 44px;
      max-height: 44px;
      padding-left: 15px;
      padding-right: 15px; }

[dir='rtl'] .fd-button-group.--split [class*="fd-button--"] {
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px; }
  [dir='rtl'] .fd-button-group.--split [class*="fd-button--"]::before {
    margin-left: 0px; }
  [dir='rtl'] .fd-button-group.--split [class*="fd-button--"].--more {
    border-left: 0px solid #fff;
    border-right: 1px solid #fff;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border-top-left-radius: 3px;
    border-bottom-left-radius: 3px; }

[dir='rtl'] .fd-button-group.--split .fd-popover__body {
  margin-right: -1px;
  margin-left: 0px;
  border-top-left-radius: 3px; }
  [dir='rtl'] .fd-button-group.--split .fd-popover__body .fd-menu__list {
    padding: 0px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
