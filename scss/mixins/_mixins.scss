//utils
@mixin fd-reset {
    font-size: $fd-font-size;
    line-height: $fd-line-height;
    color: $fd-color;
    font-family: $fd-font-family;
}
@mixin fd-reset-spacing {
  padding: 0;
  margin: 0;
}
@mixin fd-clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}
@mixin fd-last-child {
    &:last-child {
        margin-bottom: 0;
        margin-right: 0;
        @content;
    }
}
@mixin fd-first-child {
    &:first-child {
        margin-left: 0;
        @content;
    }
}
@mixin fd-screen($size, $dimension: width) {
  @if map-has-key($fd-breakpoints, $size) {
    @media (min-#{$dimension}: map-get($fd-breakpoints, $size)) {
        @content;
    }
  } @else {
    @warn "Unknown `#{$size}` in $fd-breakpoints map";
  }
}
@mixin fd-print() {
	@media print {
		@content;
	}
}
//Taken from https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/library/_triangle.scss
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;
  border-style: solid;
  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-width: 0 $width $height $width;
      border-bottom-color:  $foreground-color;
      border-left-color:  $background-color;
      border-right-color:  $background-color;
    } @else if $direction == right {
      border-width: $width 0 $width $height;
      border-bottom-color: $background-color;
      border-left-color: $foreground-color;
      border-top-color: $background-color;
    } @else if $direction == down {
      border-width: $height $width 0 $width;
      border-top-color: $foreground-color;
      border-left-color: $background-color;
      border-right-color: $background-color;
    } @else if $direction == left {
      border-width: $width $height $width 0;
      border-bottom-color: $background-color;
      border-right-color: $foreground-color;
      border-top-color: $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}
@mixin rotate($deg: 90){
    $sDeg: #{$deg}deg;
    -webkit-transform: rotate($sDeg);
    -moz-transform: rotate($sDeg);
    -ms-transform: rotate($sDeg);
    -o-transform: rotate($sDeg);
    transform: rotate($sDeg);
}

@mixin fd-button-reset {
  display: inline-block;
  margin: 0;
  padding: 0;
  font-smoothing: antialiased;
  appearance: none;
  outline: 0;
  border: 0;
  display: inline-block;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  background-color: transparent;
  border-radius: $fd-border-radius;
  @content;
}

@mixin fd-rtl {
  @at-root {
    [dir="rtl"] &,
    &[dir="rtl"] {
        @content;
    }
  }
}

@mixin fd-hide-on-xs {
    @include fd-screen(xs) {
        display: none !important;
    }
}
@mixin fd-hide-on-s {
    @include fd-screen(s) {
        display: none !important;
    }
}
@mixin fd-hide-on-m {
    @include fd-screen(m) {
        display: none !important;
    }
}

@mixin fd-hide-on-l {
    @include fd-screen(l) {
        display: none !important;
    }
}
@mixin fd-hide-on-xl {
    @include fd-screen(xl) {
        display: none !important;
    }
}

@mixin fd-show-on-xs {
    @include fd-screen(xs) {
        display: block !important;
    }
}
@mixin fd-show-on-s {
    @include fd-screen(s) {
        display: block !important;
    }
}
@mixin fd-show-on-m {
    @include fd-screen(m) {
        display: block !important;
    }
}

@mixin fd-show-on-l {
    @include fd-screen(l) {
        display: block !important;
    }
}
@mixin fd-show-on-xl {
    @include fd-screen(xl) {
        display: block !important;
    }
}

@mixin fd-link($color: $fd-color--action) {
  color: $fd-color--action;
  border-bottom: solid 1px $fd-color--action;
  @include fd-hover {
    color: map-get($fd-colors-action-states, "hover");
    border-bottom-color: map-get($fd-colors-action-states, "hover");
  }
  &:visited {
    color: map-get($fd-colors-action-states, "visited");
    border-bottom-color: map-get($fd-colors-action-states, "visited");
  }
  @include fd-active-pressed-selected {
      color: map-get($fd-colors-action-states, "selected");
      border-bottom-color: map-get($fd-colors-action-states, "selected");
  }
  @include fd-disabled {
      color: map-get($fd-colors-action-states, "disabled");
      border-bottom-color: map-get($fd-colors-action-states, "disabled");
  }
}

@mixin action-cursor {
  cursor: pointer;
}
