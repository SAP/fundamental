@import "./../settings";
@import "./../mixins";
@import "./../functions";
/*!
.fd-toggle+(--no-border)
    .fd-toggle__content+()
    .fd-toggle__title+()
*/
$block: #{$fd-namespace}-toggle;

.#{$block} {

    $fd-toggle-sizes: ("default": fd-space(12) fd-space(5) 20px -5px -5px, //48px 28px
        "xs": fd-space(9) fd-space(5) 14px -3px -10px, //36px 20px
        "s": fd-space(10) fd-space(6) 17px -4px -10px, //40px 24px
        "l": fd-space(14) fd-space(8) 22px -6px -2px, //56px 32px
        ) !default;
    $_defaults: map-get($fd-toggle-sizes, "default");
    $fd-toggle-width: nth($_defaults, 1);
    $fd-toggle-height: nth($_defaults, 2);
    $fd-toggle-background-color: fd-color("neutral", 3) !default;
    $fd-toggle-on-background-color--disabled: fd-color-state("disabled", "action");
    $fd-toggle-switch-width: nth($_defaults, 2);
    $fd-toggle-switch-background-color--disabled: hsla(240, 2%, 93%, 1) !default;
    $fd-toggle-switch-on-background-color--disabled: hsla(209, 90%, 92%, 1) !default;

    @include fd-reset();
    position: relative;
    display: inline-block;
    width: $fd-toggle-width;
    height: $fd-toggle-height;

    input {
        opacity: 0;
        width: 0;
        height: 0;

        &::before,
        &::after {
            display: none;
        }

        &:hover {
            border-color: transparent;
        }
        &:active,
        &:focus {
            border-color: transparent;
        }
        &[disabled],
        &.is-disabled,
        &[aria-disabled="true"] {
            opacity: 1;
            background-color: $fd-toggle-switch-background-color--disabled;
            & + .#{$block}__switch {
                opacity: 1;
                border-color: $fd-toggle-switch-background-color--disabled;
                box-shadow: none;
                background-color: $fd-toggle-switch-background-color--disabled;
                pointer-events: none;
            }
        }

        &:checked {

            &[disabled],
            &.is-disabled,
            &[aria-disabled="true"] {
                &+.#{$block}__switch {
                    border-color: transparent;
                    background-color: $fd-toggle-on-background-color--disabled;
                    pointer-events: none;
                }

                &+.#{$block}__switch::before {
                    border-color: transparent;
                    background-color: $fd-toggle-switch-on-background-color--disabled;
                }
            }
        }
    }

    &__switch {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        @include fd-var-color("background-color", $fd-toggle-background-color, --fd-color-neutral-3);
        -webkit-transition: 0.4s;
        transition: 0.4s;
        border-radius: 34px;
    }

    &__switch::before {
        position: absolute;
        content: "";
        height: fd-space(7);
        width: fd-space(7);
        left: 0;
        top: -5px;
        @include fd-var-color("background-color", fd-color("background", 2), --fd-color-background-2);
        border-style: solid;
        border-width: 1px;
        @include fd-var-color("border-color", $fd-toggle-background-color, --fd-color-neutral-3);
        -webkit-transition: 0.4s;
        transition: 0.4s;
        border-radius: 50%;
    }

    input:checked+&__switch {
        background-color: adjust-color($fd-link-color, $alpha: 0.6);
    }

    input:checked+&__switch::before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
        @include fd-var-color("background-color", fd-color-state("selected", "action"), --fd-color-action-selected);
        @include fd-var-color("border-color", fd-color-state("selected", "action"), --fd-color-action-selected);
        pointer-events: none;
        left: -6px;
    }

    //SIZES
    @each $key,
    $list in $fd-toggle-sizes {
        @if $key !="default" {
            &--#{$key} {
                height: nth($list, 3);
                width: nth($list, 1);

                .#{$block}__switch::before {
                    height: nth($list, 2);
                    width: nth($list, 2);
                    top: nth($list, 4);
                }

                input:checked+.#{$block}__switch::before {
                    left: nth($list, 5);
                }
            }
        }
    }
}
