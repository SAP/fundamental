@import "./../settings";
@import "./../mixins";
@import "./../functions";
/*!
.fd-toggle+(--no-border)
    .fd-toggle__content+()
    .fd-toggle__title+()
*/
$block: #{$fd-namespace}-toggle;

.#{$block} {

    $fd-toggle-sizes: ("default": fd-space(13) fd-space(5.5) 20px -5px -5px,
        "xs": fd-space(9) fd-space(5) 14px -4.5px 15px,
        "s": fd-space(10) fd-space(6) 17px -5px 15px,
        "compact": fd-space(10) fd-space(6.5) 16px -6px 13px,
        "l": fd-space(14) fd-space(8) 22px -6px 23px,
        ) !default;
    $_defaults: map-get($fd-toggle-sizes, "default");
    $fd-toggle-width: nth($_defaults, 1);
    $fd-toggle-height: nth($_defaults, 2);
    $fd-toggle-background-color: fd-color("neutral", 4) !default;
    $fd-toggle-on-background-color--disabled: #c5dcf2;
    $fd-toggle-switch-width: nth($_defaults, 2);
    $fd-toggle-switch-background-color--disabled: hsla(240, 2%, 93%, 1) !default;
    $fd-toggle-switch-border-color--disabled: hsla(212, 8%, 57%, 0.4) !default;
    $fd-toggle-switch-on-background-color--disabled: #9ebbd8 !default;
    $fd-toggle-switch-hover-background-color: #EBF5FE;
    @include fd-reset();
    position: relative;
    display: inline-block;
    width: $fd-toggle-width;
    height: $fd-toggle-height;

    input {
        opacity: 0;
        width: 0;
        height: 0;

        &::before,
        &::after {
            display: none;
        }

        &:hover {
            border-color: transparent;
        }
        &:active,
        &:focus {
            border-color: transparent;
        }
        &[disabled],
        &.is-disabled,
        &[aria-disabled="true"] {
            opacity: 1;
            background-color: $fd-toggle-switch-background-color--disabled;
            border-color: $fd-toggle-switch-border-color--disabled;
            &+.#{$block}__switch {
                opacity: 1;
                border-color: $fd-toggle-switch-border-color--disabled;
                box-shadow: none;
                background-color: $fd-toggle-switch-background-color--disabled;
                pointer-events: none;
            }
            &+.#{$block}__switch::before {
                border-color: $fd-toggle-switch-border-color--disabled;
            }
        }

        &:checked {
            &[disabled],
            &.is-disabled,
            &[aria-disabled="true"] {
                &+.#{$block}__switch {
                    border-color: transparent;
                    background-color: $fd-toggle-on-background-color--disabled;
                    pointer-events: none;
                }

                &+.#{$block}__switch::before {
                    border-color: transparent;
                    background-color: $fd-toggle-switch-on-background-color--disabled;
                }
            }
        }
    }

    &__switch {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-style: solid;
        border-width: 1px;
        @include fd-var-color("border-color", $fd-toggle-background-color, --fd-color-neutral-4);
        @include fd-var-color("background-color", $fd-toggle-background-color, --fd-color-neutral-3);
        transition: all 0.4s;
        border-radius: 34px;
        &:hover {
            @include fd-var-color("border-color", fd-color-state("selected", "action"), --fd-color-action-selected);
            &::before {
                @include fd-var-color("border-color", fd-color-state("selected", "action"), --fd-color-action-selected);
                background-color: $fd-toggle-switch-hover-background-color;
            }
        }
    }

    &__switch::before {
        position: absolute;
        content: "";
        height: fd-space(8);
        width: fd-space(8);
        left: -1px;
        top: -6px;
        @include fd-var-color("background-color", fd-color("background", 2), --fd-color-background-2);
        border-style: solid;
        border-width: 1px;
        @include fd-var-color("border-color", $fd-toggle-background-color, --fd-color-neutral-4);
        transition: all 0.4s;
        border-radius: 50%;
        z-index: 1;
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
    }

    input:checked+&__switch {
        background-color: rgba(10, 110, 209, 0.6);
        @include fd-var-color("border-color", fd-color-state("selected", "action"), --fd-color-action-selected);
    }

    input:checked+&__switch::before {
        @include fd-var-color("background-color", fd-color-state("selected", "action"), --fd-color-action-selected);
        @include fd-var-color("border-color", fd-color-state("selected", "action"), --fd-color-action-selected);
        pointer-events: none;
        left: calc(100% - 31px);
    }

    //SIZES
    @each $key,
    $list in $fd-toggle-sizes {
        @if $key !="default" {
            &--#{$key} {
                height: nth($list, 3);
                width: nth($list, 1);

                .#{$block}__switch::before {
                    height: nth($list, 2);
                    width: nth($list, 2);
                    top: nth($list, 4);
                }

                input:checked+.#{$block}__switch::before {
                    left: nth($list, 5);
                }
            }
        }
    }

    // block level modifier for inline lables
    &--label,
    &--semantic {
        width: 62px;
        height: 22px;
        .#{$block}__label--on {
            visibility: hidden;
        }

        &.#{$block}--compact {
            width: 56px;

            .#{$block}__switch::before {
                top: -3px;
            }
        }
    }

    &--label input:checked+&__switch,
    &--semantic input:checked+&__switch {
        &::before {
            left: calc(100% - 31px);
        }
        .#{$block}__label--off {
            visibility: hidden;
        }
        .#{$block}__label--on {
            visibility: visible;
        }
    }

    &--label.#{$block}--compact input:checked+&__switch,
    &--semantic.#{$block}--compact input:checked+&__switch {
        &::before {
            left: calc(100% - 25px);
        }
    }

    // label elements
    &__label {
        &--off {
            @include fd-type("-1");
            position: absolute;
            right: 6px;
            top: 3px;
        }
        &--on {
            @include fd-type("-1");
            position: absolute;
            left: 8px;
            top: 3px;
        }
    }

    // semantic modifier
    &--semantic {
        .#{$block}__switch {
            @include fd-var-color("background-color", fd-color("background", 5), --fd-color-background-5);
            @include fd-var-color("border-color", fd-color("status", 3), --fd-color-status-3);
        }

        .#{$block}__switch::before {
            @include fd-var-color("background-color", fd-color("status", 3), --fd-color-status-3);
            @include fd-var-color("border-color", fd-color("status", 3), --fd-color-status-3);
        }

        input:checked + .#{$block}__switch {
            @include fd-var-color("background-color", fd-color("background", 3), --fd-color-background-3);
            @include fd-var-color("border-color", fd-color("status", 1), --fd-color-status-1);
        }
        input:checked + .#{$block}__switch::before {
            @include fd-var-color("background-color", fd-color("status", 1), --fd-color-status-1);
            @include fd-var-color("border-color", fd-color("status", 1), --fd-color-status-1);
        }
    }

    // semantic elements
    &__semantic {
        &--off {
            @include fd-type("-1");
            position: absolute;
            right: 12px;
            top: 2px;
            @include fd-var-color("color", fd-color("status", 3), --fd-color-status-3);
        }
        &--on {
            @include fd-type("-1");
            position: absolute;
            left: 12px;
            top: 2px;
            @include fd-var-color("color", fd-color("status", 1), --fd-color-status-1);
        }
    }
}