@import "./../settings";
@import "./../mixins";
@import "./../functions";
/*!
.fd-spinner+(.is-hidden|[aria-hidden=true])

Inspired by line scale spinner from Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
* Copyright 2015 Daniel Cardoso <@DanielCardoso>
* Licensed under MIT
*/
$block: #{$fd-namespace}-spinner;
.#{$block} {
    //LOCAL VARS (set all themeable properties, always include !default)
    $fd-spinner-background-color: fd-color(action, 1) !default;
    $fd-spinner-height: 40px !default;
    $fd-spinner-width--bar: 5px !default;
    $fd-spinner-width--gutter: 3px !default;
    $fd-spinner-animation-speed: 1s !default;
    $fd-spinner-backdrop-background-color: rgba(fd-color(background, 1),0.95) !default;

    //BLOCK BASE *******************************************
    @include fd-reset;
    $_width: $fd-spinner-width--bar*4 + $fd-spinner-width--gutter*3;
    $_height: $fd-spinner-height;

    position: relative;
    width: $_width;
    height: $_height;
    display: flex;
    justify-content: space-between;
    margin: 0 auto;

    &.is-hidden,
    &[aria-hidden="true"] {
        display: none;
    }

    //this is the only globally-applied instance of aria and state classes, may want to rethink this, maybe require a class like .fd-spinner-backdrop to be used in conjunction with the state
    @at-root {
        .is-busy,
        [aria-busy="true"] {
            position: relative;
            min-height: $_height;
            &::before {
                position: absolute;
                background-color: $fd-spinner-backdrop-background-color;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: 1;
                content: "";
            }
            .#{$block} {
                position: absolute;
                z-index: 2;
                left: calc(50% - #{$_width}/2);
                top: calc(50% - #{$_height}/2);
            }
        }
    }

    &::before,
    &::after {
        content: "";
        position: relative;
        width: $fd-spinner-width--bar;
        height: 100%;
        background-color: $fd-spinner-background-color;
        border-radius: $fd-border-radius;
    }
    div {
        &::before,
        &::after {
            content: "";
            position: absolute;
            width: $fd-spinner-width--bar;
            height: 100%;
            background-color: $fd-spinner-background-color;
            border-radius: $fd-border-radius;
        }
        &::before {
            left: $fd-spinner-width--bar + $fd-spinner-width--gutter;
        }
        &::after {
            right: $fd-spinner-width--bar + $fd-spinner-width--gutter;
        }
    }

    //1
    &::before {
        animation: line-scale $fd-spinner-animation-speed infinite ease;
        animation-delay: -($fd-spinner-animation-speed);
    }
    div {
        //2
        &::before {
            animation: line-scale $fd-spinner-animation-speed infinite ease;
            animation-delay: -($fd-spinner-animation-speed - .1s);
        }
        //3
        &::after {
            animation: line-scale $fd-spinner-animation-speed infinite ease;
            animation-delay: -($fd-spinner-animation-speed - .2s);
        }
    }
    //4
    &::after {
        animation: line-scale $fd-spinner-animation-speed infinite ease;
        animation-delay: -($fd-spinner-animation-speed - .3s);
    }

}

@keyframes line-scale {
    0%,
    40%,
    100% {
        transform: scaleY(.4);
    }
    80% {
        transform: scaleY(1);
    }
}
